@{
    ViewData["Title"] = "Display List";
}

@model MummyViewModel
    <div class="container">
        <br /><br /><br /><br /><br /><br />
        <form asp-controller="Home" asp-action="DisplayList">
            <label>Depth (meters): </label>
            <select id="depth" name="depth">
                <!--The empty values are for if we don't want to filter by that one right now when we submit-->
                <option selected="@(Model.SelectedDepth == "" ? "selected" : null)" value=""></option>
                <option selected="@(Model.SelectedDepth == "1" ? "selected" : null)" value="1">0-1</option>
                <option selected="@(Model.SelectedDepth == "2" ? "selected" : null)" value="2">1-2</option>
                <option selected="@(Model.SelectedDepth == "3" ? "selected" : null)" value="3">2-3</option>
                <option selected="@(Model.SelectedDepth == "4" ? "selected" : null)" value="4">3-4</option>
                <option selected="@(Model.SelectedDepth == "U" ? "selected" : null)" value="U">Other</option>
            </select>

            <label>Sex: </label>
            <select id="sex" name="sex">
                <option selected="@(Model.SelectedSex == "z" ? "selected" : null)" value="z"></option>
                <option selected="@(Model.SelectedSex == "M" ? "selected" : null)" value="M">Male</option>
                <option selected="@(Model.SelectedSex == "F" ? "selected" : null)" value="F">Female</option>
                <option>Unknown</option>
            </select>

            <label>Head Direction: </label>
            <select id="headdirection" name="headdirection">
                <option selected="@(Model.SelectedHeadDir == "z" ? "selected" : null)" value="z"></option>
                <option selected="@(Model.SelectedHeadDir == "E" ? "selected" : null)" value="E">East</option>
                <option selected="@(Model.SelectedHeadDir == "W" ? "selected" : null)" value="W">West</option>
                <option>Other</option>
            </select>

            <label>Age at Death: </label>
            <select id="ageatdeath" name="ageatdeath">
                <option selected="@(Model.SelectedAgeAtDeath == "z" ? "selected" : null)" value="z"></option>
                <option selected="@(Model.SelectedAgeAtDeath == "A" ? "selected" : null)" value="A">Adult</option>
                <option selected="@(Model.SelectedAgeAtDeath == "C" ? "selected" : null)" value="C">Child</option>
                <option selected="@(Model.SelectedAgeAtDeath == "I" ? "selected" : null)" value="I">Infant</option>
                <option selected="@(Model.SelectedAgeAtDeath == "N" ? "selected" : null)" value="N">Newborn</option>
                <option>Other</option>
            </select>

            <label>Hair Color</label>
            <select id="haircolor" name="haircolor">
                <option selected="@(Model.SelectedHairColor == "z" ? "selected" : null)" value="z"></option>
                <option selected="@(Model.SelectedHairColor == "B" ? "selected" : null)" value="B">Brown(Dark and Light)</option>
                <option selected="@(Model.SelectedHairColor == "K" ? "selected" : null)" value="K">Black</option>
                <option selected="@(Model.SelectedHairColor == "A" ? "selected" : null)" value="A">Brown/Red</option>
                <option selected="@(Model.SelectedHairColor == "R" ? "selected" : null)" value="R">Red/RedBlond</option>
                <option selected="@(Model.SelectedHairColor == "D" ? "selected" : null)" value="D">Blond</option>
                <option selected="@(Model.SelectedHairColor == "U" ? "selected" : null)" value="U">Unknown</option>
            </select>

            <label>Burial Wrapping: </label>
            <select id="wrapping" name="wrapping">
                <option selected="@(Model.SelectedWrapping == "z" ? "selected" : null)" value="z"></option>
                <option selected="@(Model.SelectedWrapping == "W" ? "selected" : null)" value="W">Full or nearly full wrapping remains</option>
                <option selected="@(Model.SelectedWrapping == "H" ? "selected" : null)" value="H">Partial wrapping remains</option>
                <option selected="@(Model.SelectedWrapping == "B" ? "selected" : null)" value="B">Bones and/or only partial remnants of wrapping remains</option>
                <option selected="@(Model.SelectedWrapping == "U" ? "selected" : null)" value="U">Unknown</option>
            </select>

            <button type="submit">Filter</button>
        </form>
    </div>
    <div class="container bg-light rounded">
        <br /><br /><br /><br /><br />
        <div class="container">
            <div class="row container text-center">
                <h1>List of Recorded Mummy Records</h1>
            </div>
            <div class="row container text-center">
                <div class="">
                    <a class="btn btn-secondary" asp-controller="Home" asp-action="AddEntry">Add a Mummy</a>
                </div>
            </div>

        </div>
        <br /><br />

        @foreach (Burialmain m in Model.Mummies)
        {
            <div class="container">
                <div class="card card-outline-primary m-2 p-2">
                    <div class="bg-light p-1">
                        <h4>Burial Number: @m.Burialnumber</h4>
                    </div>
                    <br />
                    <div class="container">
                        <div class="row">
                            <div class="col-4">Mummy Id: @m.Id</div>
                            <div class="col-1">Sex: @m.Sex</div>
                            <div class="col-3">Excavation Date: @m.Dateofexcavation</div>

                            <div class="col-1">
                                <form method="post" asp-page-handler="Remove">
                                    <input type="hidden" name="Id" value="@m.Id" />
                                    <!--Return URL <input type="hidden" name="returnUrl" value=" at model ReturnUrl"-->
                                    <button type="submit" class="btn btn-outline-danger">Remove</button>
                                </form>
                            </div>
                            <div class="col-1">
                                <form>
                                    <input type="hidden" name="Id" value="@m.Id" />

                                    <button type="submit" class="btn btn-outline-warning">Edit</button>
                                </form>
                            </div>
                            <div class="col-2">
                                <form method="get" asp-controller="Home" asp-action="AddTextile">
                                    <input type="hidden" name="Id" value="@m.Id" />

                                    <button type="submit" class="btn btn-outline-success">Add Textile</button>
                                </form>
                            </div>

                        </div>

                        <form method="get" asp-controller="Home" asp-action="Details">
                            <input type="hidden" name="Id" value="@m.Id" />
                            <button type="submit" class="btn btn-sm">View Details</button>
                        </form>
                        <!-- <a asp-controller="Home" asp-action="Textile" asp-route-Id="@m.Id">View Associated Textile</a>-->
                    </div>
                </div>
            </div>
            <br /><br />

        }
        <div page-model="@Model.PageInfo" page-action="Index" page-classes-enabled="true"
             page-class="btn" page-class-normal="btn-outline-dark"
             page-class-selected="btn-primary" class="btn-group pull-right m-1 pagecenter"></div>
    </div>
